index 71582ccd..c8c0ab83 100644
--- pylib/gyp/MSVSVersion.py
+++ pylib/gyp/MSVSVersion.py
@@ -263,12 +263,12 @@ def _CreateVersion(name, path, sdk_based=False):
       '2019': VisualStudioVersion('2019',
                                   'Visual Studio 2019',
                                   solution_version='12.00',
-                                  project_version='15.0',
+                                  project_version='16.0',
                                   flat_sln=False,
                                   uses_vcxproj=True,
                                   path=path,
                                   sdk_based=sdk_based,
-                                  default_toolset='v141',
+                                  default_toolset='v142',
                                   compatible_sdks=['v8.1', 'v10.0']),
       '2017': VisualStudioVersion('2017',
                                   'Visual Studio 2017',
@@ -409,7 +409,8 @@ def _DetectVisualStudioVersions(versions_to_check, force_express):
       '11.0': '2012',
       '12.0': '2013',
       '14.0': '2015',
-      '15.0': '2017'
+      '15.0': '2017',
+      '16.0': '2019'
   }
   versions = []
   for version in versions_to_check:
@@ -470,7 +471,7 @@ def SelectVisualStudioVersion(version='auto', allow_fallback=True):
   if version == 'auto':
     version = os.environ.get('GYP_MSVS_VERSION', 'auto')
   version_map = {
-    'auto': ('15.0', '14.0', '12.0', '10.0', '9.0', '8.0', '11.0'),
+    'auto': ('16.0', '15.0', '14.0', '12.0', '10.0', '9.0', '8.0', '11.0'),
     '2005': ('8.0',),
     '2005e': ('8.0',),
     '2008': ('9.0',),
@@ -483,6 +484,7 @@ def SelectVisualStudioVersion(version='auto', allow_fallback=True):
     '2013e': ('12.0',),
     '2015': ('14.0',),
     '2017': ('15.0',),
+    '2019': ('16.0',),
   }
   override_path = os.environ.get('GYP_MSVS_OVERRIDE_PATH')
   if override_path:
@@ -498,7 +500,7 @@ def SelectVisualStudioVersion(version='auto', allow_fallback=True):
       raise ValueError('Could not locate Visual Studio installation.')
     if version == 'auto':
       # Default to 2005 if we couldn't find anything
-      return _CreateVersion('2005', None)
+      return _CreateVersion('2019', None)
     else:
       return _CreateVersion(version, None)
   return versions[0]
