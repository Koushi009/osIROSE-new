dist: focal
language: cpp
os: linux

env:
  global:
  #discord webhook
  - secure: "MXG3LzmYr0KLqEw3WZo1qY3/iGVaAQuAcE/V9ad3FlpBz89BoNpNP+frf6Yrvamy/UGiR14hgcPbzmTI5DvdBkdFpf9K0xuLRAOsxOMPfTU2d6ip42uifDJ8koXg8INzOk8iab9TftzY2Zg/u4/L3JEo2HWbKFndQMCke7IZqpNOCcrJWdXtpb0/QKpcCxbovS4toAAkmi1P/2S21CdTnZLF4ee06h5yChkrHjXNPiDfBpM5uhuIkH/KS0ruv9WyUTd7gGtgQ7KzKcyRCWv3G9jXZNbP5nXGVsPFnRz1o3ZBBgBX2ZYQsYoMqQdbfFTe8hi6xuabSACAxlhQh3+f8l05a43d1zP7uWh7on0z4CAVIbM7MVBjfJYT1lzQNujpyjPO1DhiT4+2wGzdCNLqu2KFxhgj8nsafYs/Esj7Ie1zn7IcquruqJg24QTFgTxvuACidQcuTnc9f5NBM+hLqWTsvnD0tvFzkk5tEzc3XJwmTzXWk348DTO+SmXZvs5EiMORue7igCa8QGnWT6R4WtCrNBSDWza17VV9uGUJhgakI8bSvTOlUhUpsBmPR5rPaRZKkKTvpm6KLsqEj1dqEyyE69aTZ+ow+mRX16PiZT6feW9nyFvshkA4UzBHwN9Y9/kz/xSwz6Tg7WDG69Ru3XGY7FuxKAmTjJm4DspOdZ4="
  - coverity_scan_script_test_mode=true
  - coverity_scan_run_condition='"$TRAVIS_OS_NAME" != osx -a "$BUILD_TYPE" = Release'
  #coveralls repo token
  - secure: "s8DdaxdWVR3qRBxfxO6UjugB1dWlEnv9KhF1ZUHDhWziPtoecKjCXnJYSB6EOddTPoJXtOdTVW9ThGGCvKQ+vYdGNce+PCWglruANO/lEz/82HWPZkTKbw4WyoDo5GqlFCu1C3gY9dA58ClpGDlX5BNQA81JCJrWKUdR2J0/WW9USPKHxDLGISYKt28nwVjywR8uDnysBJkmmS+53Ge2MSzmOLuEZeysq7iCD6xssPL5UDDb/itNOc4OkvRGtvTnLrMF4c7naFRfbhc7NR1MxKz+eu2DgM9SAnJrh1jnYXWu/1EG8VKQOYR23OwjxSurSRjJxInGZdrSGUB8R38Z35Ndq7RHKRAZvwIPkZqDFCUQ/hkAJlu/4cbz8KPHJMOV0SOFpCztnFCQY619KXn0S0Tos38KthVu2nNSMJu1e1GuQK1dhM+Uh3MCrSChyPmK75IKbM7Jj5OKRqKO4uSnsut3RK91RYF3oB3HdLkznTLYBLnyEWK6Zh56lhoZiJMd/WCL24/U5Pne6VwLDBjaeOH9lEjD6oaUSIDyowVAOte4qVg7WW7OXx2fkK9ySd4X0P5C5JLtWsZ8O+va9LkIxPPCdck3HV+k1EU0tHrLAAkpwO3D9StRdkc7cX+z13aFOZQyKef1wbKyNCYrq6E3SGvlI011+0vN2ZiGKKusGcs="
  - PATH=${TRAVIS_BUILD_DIR}/build/3rdparty/bin:${TRAVIS_BUILD_DIR}/build/3rdparty/usr/bin:${TRAVIS_BUILD_DIR}/build/3rdparty/usr/local/bin:${TRAVIS_BUILD_DIR}/cmake_app/bin:${TRAVIS_BUILD_DIR}/ninja:$HOME/usr/bin:$HOME/usr/local/bin:$PATH
  - CI_DIRECTORY=${TRAVIS_BUILD_DIR}/cmake/scripts
  - CCACHE_SLOPPINESS="pch_defines,time_macros"
  - PREFIX=${TRAVIS_BUILD_DIR}/build/3rdparty
  - PROCESSOR_ARCH=`uname -p`
  - WITH_CRASH_REPORTS=ON
  - BUILD_TYPE=Release
  - BUILD_JOB_COUNT=4
  - GCOV_EXEC=gcov-8
  - SUITE=tests

cache:
  pip: true
  ccache: true
  bundler: true
  directories:
  - ${TRAVIS_BUILD_DIR}/build/3rdparty/bin
  - ${TRAVIS_BUILD_DIR}/build/3rdparty/usr
  - ${TRAVIS_BUILD_DIR}/build/3rdparty/lib
  - ${TRAVIS_BUILD_DIR}/build/3rdparty/include
  - ${TRAVIS_BUILD_DIR}/cmake_app
  - ${TRAVIS_BUILD_DIR}/ninja

stages:
  - prepare cache
  - compile
  - notify

jobs:
  include:
    - &gccarminit
      stage: prepare cache
      name: "ARM64 Ubuntu/GCC"
      arch: arm64
      os: linux
      compiler: g++
      if: branch != coverity_scan
      env: CC=gcc-8 CXX=g++-8 CC_FOR_BUILD=gcc-8 CXX_FOR_BUILD=g++-8
      addons:
        apt:
          packages:
          - lcov
          - g++-8
          - libcurl4-openssl-dev
          - libmysqlclient-dev
          - python3
          - python3-pip
          - ccache

      install:
        - |
          if [ ! -f "$TRAVIS_BUILD_DIR/cmake_app/bin/cmake" ]; then
            CMAKE_URL="https://github.com/Kitware/CMake/releases/download/v3.20.1/cmake-3.20.1-linux-x86_64.tar.gz"
            mkdir cmake_src && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C $TRAVIS_BUILD_DIR/cmake_src
            cd cmake_src && ./bootstrap --prefix=$TRAVIS_BUILD_DIR/cmake_app && make -j ${BUILD_JOB_COUNT} && make install
            cd ..
          else
            echo 'Using cached cmake_app directory.';
          fi
        - cmake --version
        - bash $CI_DIRECTORY/install-lcov.sh
        - bash $CI_DIRECTORY/install-ninja.sh
      script: true

#----------------------------
#GCC Compile step
    - <<: *gccarminit
      stage: compile
      name: "ARM64 G++-8 Release"
      if: branch != coverity_scan
      env: CC=gcc-8 CXX=g++-8 CC_FOR_BUILD=gcc-8 CXX_FOR_BUILD=g++-8
      script:
        - cd build
        - cmake -GNinja -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_BUILD_TYPE=${BUILD_TYPE} ..
        - cmake --build . -- -j ${BUILD_JOB_COUNT}

#Notify discord and everyone else
    - &notify
      stage: notify
      cache: false
      script: true
      git:
        submodules: false
      after_success:
        - $CI_DIRECTORY/notify-discord.sh success $DISCORD_WEBHOOK_URL
